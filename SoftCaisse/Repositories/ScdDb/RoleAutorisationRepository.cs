using SoftCaisse.Models;
using System.Collections.Generic;
using System.Linq;

namespace SoftCaisse.Repositories.ScdDb
{
    internal class RoleAutorisationRepository
    {
        // ===============================================================================================
        // DEBUT DECLARATION DES VARIABLES ===============================================================
        // ===============================================================================================
        private readonly SCDContext _scdContext;
        // ===============================================================================================
        // FIN DECLARATION DES VARIABLES =================================================================
        // ===============================================================================================










        // ===============================================================================================
        // DEBUT CONSTRUCTEUR ============================================================================
        // ===============================================================================================
        public RoleAutorisationRepository(SCDContext scdContext)
        {
            _scdContext = new SCDContext();
        }
        // ===============================================================================================
        // FIN CONSTRUCTEUR ==============================================================================
        // ===============================================================================================










        // ===============================================================================================
        // DEBUT GET =====================================================================================
        // ===============================================================================================
        public List<RoleAutorisation> GetAll()
        {
            using (SCDContext scdContext = new SCDContext())
            {
                return scdContext.RoleAutorisation.ToList();
            }  
        }



        public RoleAutorisation GetById(int id)
        {
            using (SCDContext scdContext = new SCDContext())
            {
                return scdContext.RoleAutorisation.Find(id);
            }
        }
        // ===============================================================================================
        // FIN GET =======================================================================================
        // ===============================================================================================





        // ===============================================================================================
        // DEBUT CREATE ==================================================================================
        // ===============================================================================================
        public void Add(RoleAutorisation entity)
        {
            using (SCDContext scdContext = new SCDContext())
            {
                scdContext.RoleAutorisation.Add(entity);
                scdContext.SaveChanges();
            }
        }
        // ===============================================================================================
        // FIN CREATE ====================================================================================
        // ===============================================================================================





        // ===============================================================================================
        // DEBUT DELETE ==================================================================================
        // ===============================================================================================
        public void Delete(int id)
        {
            RoleAutorisation roleAutToDelete = GetById(id);
            if (roleAutToDelete != null)
            {
                using (SCDContext scdContext = new SCDContext())
                {
                    scdContext.RoleAutorisation.Remove(roleAutToDelete);
                    scdContext.SaveChanges();
                }
            }
        }
        // ===============================================================================================
        // FIN DELETE ====================================================================================
        // ===============================================================================================






        // ===============================================================================================
        // DEBUT UPDATE ==================================================================================
        // ===============================================================================================
        public void Update(RoleAutorisation entity)
        {
            RoleAutorisation roleAutorisationToUpdate = GetById(entity.Id);
            roleAutorisationToUpdate.EstAutorise = entity.EstAutorise;

            using (SCDContext scdContext = new SCDContext())
            {
                scdContext.SaveChanges();
            }
        }
        // ===============================================================================================
        // FIN UPDATE ====================================================================================
        // ===============================================================================================




    }
}
